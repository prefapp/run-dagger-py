name: 'run-dagger-py'
description: 'Action to run a dagger workflow, using the python SDK'
inputs:
  workflow:
    description: 'The workflow script to run, as specified in [tool.poetry.scripts]'
    required: true
    default: 'main'
  config_file:
    description: 'The firestarter config file path'
    required: true
    default: '.dagger/firestarter.yml'
  python_version:
    description: 'The python version to use'
    required: false
    default: '3.11'
  working_directory:
    description: 'The working directory to run the action in'
    required: false
    default: ${{ github.workspace }}
  pyproject_path:
    description: 'The path to the pyproject.toml file'
    required: false
    default: '.dagger'
  vars:
    description: 'The var arguments to pass to the workflow (in toml format)'
    required: false
    default: ""
  secrets:
    description: 'The secrets to pass to the workflow (in toml format)'
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - uses: actions/setup-python@v5
      id: setup-python
      with:
        python-version: '${{ inputs.python_version }}'

    - name: Install poetry
      run: pipx install poetry==1.8.2 --python '${{ steps.setup-python.outputs.python-path }}' 
      shell: bash

    - run: poetry install -C ${{ inputs.pyproject_path }} --with ${{ inputs.workflow }}
      working-directory: ${{ inputs.working_directory }}
      shell: bash

    - run: poetry env info -C ${{ inputs.pyproject_path }}
      working-directory: ${{ inputs.working_directory }}
      shell: bash

    - id: run-dagger
      env:
        INPUT_VARS: ${{ inputs.vars }}
        INPUT_SECRETS: ${{ inputs.secrets }}
        INPUT_CONFIG_FILE: ${{ inputs.config_file }}
      run: poetry -C ${{ inputs.pyproject_path }} run firestarter ${{ inputs.workflow }}
      working-directory: ${{ inputs.working_directory }}
      shell: bash
